<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="datasearch">

    <select id="selectLogin" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select decode(count(*),1,'Y','N') as login_yn
     , max(role_grp) as role_grp
     , max(usr_id) as usr_id
     , max(usr_as) as usr_as
     , max(usr_nm) as usr_nm
     , max(site_url) as site_url
     , max(site_tit) as site_tit
     , max(main_logo_url) as main_logo_url
     , max(main_tit) as main_tit
     , max(cbap_logo_url) as cbap_logo_url
     , max(cbap_tit) as cbap_tit
     , max(rbap_logo_url) as rbap_logo_url
     , max(rbap_tit) as rbap_tit
     , max(vbap_logo_url) as vbap_logo_url
     , max(vbap_tit) as vbap_tit
  from cbap$_usr
 where upper(usr_id) = upper(#{USR_ID})
   and usr_pw = #{USR_PW}
]]> 
    </select>

    <select id="selectDsProjectList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , proj_id
     , proj_nm
     , proj_desc
     , colect_typ_cd 
     , disp_ord 
  from cbap$_prj
 where 1=1 
   and usr_id = #{USR_ID}
]]>
<if test="PROJ_ID != null">
   and proj_id = #{PROJ_ID}
</if>
<if test="COLECT_TYP_CD != null">
   and colect_typ_cd = #{COLECT_TYP_CD}
</if>
<![CDATA[  
 order by disp_ord
]]> 
    </select>
    
	<update id="insertDsProjectInfo" parameterType="hashmap">
<![CDATA[
insert into cbap$_prj (usr_id, proj_id, proj_nm, proj_desc, colect_typ_cd, disp_ord) 
select #{USR_ID} as usr_id
     , (select 'P' || lpad(nvl(substr(max(proj_id),2)+1,1),5,'0') from cbap$_prj where usr_id = #{USR_ID}) as proj_id
     , #{PROJ_NM} as proj_nm
     , #{PROJ_DESC} as proj_desc
     , #{COLECT_TYP_CD} as colect_typ_cd
     , #{DISP_ORD} as disp_ord
  from dual
]]>
	</update> 
	
	<update id="deleteDsProjectInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_prj where usr_id = #{USR_ID} and proj_id = #{PROJ_ID}
]]>
	</update> 
    
	<update id="updateDsProjectInfo" parameterType="hashmap">
<![CDATA[
update cbap$_prj
   set proj_nm = #{PROJ_NM}
     , proj_desc = #{PROJ_DESC}
     , colect_typ_cd = #{COLECT_TYP_CD}
     , disp_ord = #{DISP_ORD}
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
]]>
	</update>
	
    <select id="selectDsJobList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , proj_id
     , job_id
     , job_nm 
     , disp_ord 
  from cbap$_crw_job
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
]]>
<if test="JOB_ID_LST != null">
   and job_id in (${JOB_ID_LST})
</if>
<if test="JOB_ID != null">
   and job_id = #{JOB_ID}
</if>
<![CDATA[   
 order by disp_ord
]]> 
    </select>
    
    <select id="selectDsApiJobList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , proj_id
     , job_id
     , job_nm 
     , disp_ord 
  from cbap$_api_job
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
]]>
<if test="JOB_ID != null">
   and job_id = #{JOB_ID}
</if>
<![CDATA[   
 order by disp_ord
]]> 
    </select>    
    
	<update id="insertDsJobInfo" parameterType="hashmap">
<![CDATA[
insert into cbap$_crw_job (usr_id, proj_id, job_id, job_nm, disp_ord) 
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , (select 'J' || lpad(nvl(substr(max(job_id),2)+1,1),5,'0') from cbap$_crw_job where usr_id = #{USR_ID} and proj_id = #{PROJ_ID}) as job_id
     , #{JOB_NM} as job_nm
     , #{DISP_ORD} as disp_ord
  from dual
]]>
	</update> 
	
	<update id="insertDsApiJobInfo" parameterType="hashmap">
<![CDATA[
insert into cbap$_api_job (usr_id, proj_id, job_id, job_nm, disp_ord) 
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , (select 'J' || lpad(nvl(substr(max(job_id),2)+1,1),5,'0') from cbap$_api_job where usr_id = #{USR_ID} and proj_id = #{PROJ_ID}) as job_id
     , #{JOB_NM} as job_nm
     , #{DISP_ORD} as disp_ord
  from dual
]]>
	</update>	
	
	<update id="deleteDsJobInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_crw_job where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>	
	
	<update id="deleteDsApiJobInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_job where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>	
	
	<update id="deleteDsJobAllByProject" parameterType="hashmap">
<![CDATA[
delete from cbap$_crw_job where usr_id = #{USR_ID} and proj_id = #{PROJ_ID}
]]>
	</update> 
	
	<update id="deleteDsApiJobAllByProject" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_job where usr_id = #{USR_ID} and proj_id = #{PROJ_ID}
]]>
	</update>
	    
	<update id="updateDsJobInfo" parameterType="hashmap">
<![CDATA[
update cbap$_crw_job
   set job_nm = #{JOB_NM}
     , disp_ord = #{DISP_ORD}
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
]]>
	</update>
	
	<update id="updateDsApiJobInfo" parameterType="hashmap">
<![CDATA[
update cbap$_api_job
   set job_nm = #{JOB_NM}
     , disp_ord = #{DISP_ORD}
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
]]>
	</update>
	
    <select id="selectDsSourceList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , proj_id, job_id, src_id, src_nm 
     , src_div_cd
     , src_typ_cd
     , src_encode
     , src_val
     , src_val_position
     , src_save_type
     , delay_time
     , loop_yn, loop_block_cnt, loop_block_cnt_auto, loop_cnt, loop_cnt_auto 
     , prm1_key, prm1_typ, prm1_val, prm1_inc 
     , prm2_key, prm2_typ, prm2_val, prm2_inc 
     , prm3_key, prm3_typ, prm3_val, prm3_inc 
     , prm4_key, prm4_typ, prm4_val, prm4_inc 
     , prm5_key, prm5_typ, prm5_val, prm5_inc 
     , disp_ord 
  from cbap$_crw_src 
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
]]>
<if test="SRC_ID != null">
   and src_id = #{SRC_ID}
</if>
<![CDATA[
 order by disp_ord
]]> 
    </select>
    
    <select id="selectDsApiSourceList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , proj_id, job_id, src_id, src_nm 
     , src_div_cd
     , src_typ_cd
     , src_encode
     , src_val
     , src_val_position
     , method, auth_yn, out_fmt
     , xml_prefix, xml_namespaceuri
     , delay_time 
     , disp_ord 
  from cbap$_api_src 
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
]]>
<if test="SRC_ID != null">
   and src_id = #{SRC_ID}
</if>
<if test="SRC_ID_LST != null">
   and src_id in (${SRC_ID_LST})
</if>
<![CDATA[
 order by disp_ord
]]> 
    </select>
        
	<update id="insertDsSourceInfo" parameterType="hashmap">
<![CDATA[
insert into cbap$_crw_src
      (usr_id, proj_id, job_id, src_id, src_nm 
     , src_div_cd
     , src_typ_cd
     , src_encode
     , src_val
     , src_val_position
     , src_save_type
     , delay_time
     , loop_yn, loop_block_cnt, loop_block_cnt_auto, loop_cnt, loop_cnt_auto 
     , prm1_key, prm1_typ, prm1_val, prm1_inc 
     , prm2_key, prm2_typ, prm2_val, prm2_inc 
     , prm3_key, prm3_typ, prm3_val, prm3_inc 
     , prm4_key, prm4_typ, prm4_val, prm4_inc 
     , prm5_key, prm5_typ, prm5_val, prm5_inc 
     , disp_ord, rgst_id, rgst_dt, updt_id, updt_dt) 
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , (select 'S' || lpad(nvl(substr(max(src_id),2)+1,1),5,'0') from cbap$_crw_src where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}) as src_id
     , #{SRC_NM} as src_nm
     , #{SRC_DIV_CD} as src_div_cd
     , #{SRC_TYP_CD} as src_typ_cd
     , #{SRC_ENCODE} as src_encode
     , #{SRC_VAL} as src_val
     , #{SRC_VAL_POSITION} as src_val_position
     , #{SRC_SAVE_TYPE} as src_save_type
     , #{DELAY_TIME} as delay_time
     , #{LOOP_YN} as loop_yn
     , #{LOOP_BLOCK_CNT} as loop_block_cnt
     , #{LOOP_BLOCK_CNT_AUTO} as loop_block_cnt_auto
     , #{LOOP_CNT} as loop_cnt
     , #{LOOP_CNT_AUTO} as loop_cnt_auto
     , #{PRM1_KEY} as prm1_key, #{PRM1_TYP} as prm1_typ, #{PRM1_VAL} as prm1_val, #{PRM1_INC} as prm1_inc
     , #{PRM2_KEY} as prm2_key, #{PRM2_TYP} as prm2_typ, #{PRM2_VAL} as prm2_val, #{PRM2_INC} as prm2_inc
     , #{PRM3_KEY} as prm3_key, #{PRM3_TYP} as prm3_typ, #{PRM3_VAL} as prm3_val, #{PRM3_INC} as prm3_inc
     , #{PRM4_KEY} as prm4_key, #{PRM4_TYP} as prm4_typ, #{PRM4_VAL} as prm4_val, #{PRM4_INC} as prm4_inc
     , #{PRM5_KEY} as prm5_key, #{PRM5_TYP} as prm5_typ, #{PRM5_VAL} as prm5_val, #{PRM5_INC} as prm5_inc
     , #{DISP_ORD} as disp_ord
     , #{USR_ID} as rgst_id
     , SYSDATE as rgst_dt
     , #{USR_ID} as updt_id
     , SYSDATE as updt_dt
  from dual
]]>
	</update>     
    
	<update id="insertDsApiSourceInfo" parameterType="hashmap">
<![CDATA[
insert into cbap$_api_src
      (usr_id, proj_id, job_id, src_id, src_nm 
     , src_div_cd
     , src_typ_cd
     , src_encode
     , src_val
     , src_val_position
     , method, auth_yn, out_fmt, xml_prefix, xml_namespaceuri, delay_time 
     , disp_ord, rgst_id, rgst_dt, updt_id, updt_dt) 
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , (select 'S' || lpad(nvl(substr(max(src_id),2)+1,1),5,'0') from cbap$_api_src where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}) as src_id
     , #{SRC_NM} as src_nm
     , #{SRC_DIV_CD} as src_div_cd
     , #{SRC_TYP_CD} as src_typ_cd
     , #{SRC_ENCODE} as src_encode
     , #{SRC_VAL} as src_val
     , #{SRC_VAL_POSITION} as src_val_position
     , #{METHOD} as method
     , #{AUTH_YN} as auth_yn
     , #{OUT_FMT} as out_fmt
     , #{XML_PREFIX} as xml_prefix
     , #{XML_NAMESPACEURI} as xml_namespaceuri
     , #{DELAY_TIME} as delay_time
     , #{DISP_ORD} as disp_ord
     , #{USR_ID} as rgst_id
     , SYSDATE as rgst_dt
     , #{USR_ID} as updt_id
     , SYSDATE as updt_dt
  from dual
]]>
	</update> 
	    
	<update id="deleteDsSourceInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_crw_src where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>	
	
	<update id="deleteDsSourceAllByProject" parameterType="hashmap">
<![CDATA[
delete from cbap$_crw_src where usr_id = #{USR_ID} and proj_id = #{PROJ_ID}
]]>
	</update> 
	
	<update id="deleteDsSourceAllByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_crw_src where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update> 
    
	<update id="updateDsSourceInfo" parameterType="hashmap">
<![CDATA[
update cbap$_crw_src 
   set src_nm = #{SRC_NM}
     , src_div_cd = #{SRC_DIV_CD}
     , src_typ_cd = #{SRC_TYP_CD}
     , src_encode = #{SRC_ENCODE}
     , src_val = #{SRC_VAL}
     , src_val_position = #{SRC_VAL_POSITION}
     , src_save_type = #{SRC_SAVE_TYPE}
     , delay_time = #{DELAY_TIME}
     , loop_yn = #{LOOP_YN}
     , loop_block_cnt = #{LOOP_BLOCK_CNT}
     , loop_block_cnt_auto = #{LOOP_BLOCK_CNT_AUTO}
     , loop_cnt = #{LOOP_CNT}
     , loop_cnt_auto  = #{LOOP_CNT_AUTO}
     , prm1_key = #{PRM1_KEY}
     , prm1_typ = #{PRM1_TYP}
     , prm1_val = #{PRM1_VAL}
     , prm1_inc = #{PRM1_INC}
     , prm2_key = #{PRM2_KEY}
     , prm2_typ = #{PRM2_TYP}
     , prm2_val = #{PRM2_VAL}
     , prm2_inc = #{PRM2_INC}
     , prm3_key = #{PRM3_KEY}
     , prm3_typ = #{PRM3_TYP}
     , prm3_val = #{PRM3_VAL}
     , prm3_inc = #{PRM3_INC}
     , prm4_key = #{PRM4_KEY}
     , prm4_typ = #{PRM4_TYP}
     , prm4_val = #{PRM4_VAL}
     , prm4_inc = #{PRM4_INC}
     , prm5_key = #{PRM5_KEY}
     , prm5_typ = #{PRM5_TYP}
     , prm5_val = #{PRM5_VAL}
     , prm5_inc = #{PRM5_INC}
     , disp_ord = #{DISP_ORD}
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
]]>
	</update>

	<update id="updateDsApiSourceInfo" parameterType="hashmap">
<![CDATA[
update cbap$_api_src 
   set src_nm = #{SRC_NM}
     , src_div_cd = #{SRC_DIV_CD}
     , src_typ_cd = #{SRC_TYP_CD}
     , src_encode = #{SRC_ENCODE}
     , src_val = #{SRC_VAL}
     , src_val_position = #{SRC_VAL_POSITION}
     , method = #{METHOD}
     , auth_yn= #{AUTH_YN}
     , out_fmt = #{OUT_FMT}
     , xml_prefix = #{XML_PREFIX}
     , xml_namespaceuri = #{XML_NAMESPACEURI}
     , delay_time = #{DELAY_TIME}
     , disp_ord = #{DISP_ORD}
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
]]>
	</update>
    <select id="selectDsTargetList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , proj_id
     , job_id
     , src_id
     , tgt_id
     , tgt_nm
     , tgt_find_type
     , tgt_find_val
     , tgt_rep_val
     , tgt_save_type
     , tgt_save_val
     , disp_ord
  from cbap$_crw_tgt
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
]]>
<if test="TGT_ID != null">
   and tgt_id = #{TGT_ID}
</if>
<![CDATA[
 order by disp_ord
]]> 
    </select>
    
    <resultMap id="selectDsApiInputListMap" type="hashmap" >
    	<result property="usr_id" column="usr_id" javaType="java.lang.String" />
    	<result property="proj_id" column="proj_id" javaType="java.lang.String" />
    	<result property="job_id" column="job_id" javaType="java.lang.String" />
    	<result property="src_id" column="src_id" javaType="java.lang.String" />
    	<result property="inp_id" column="inp_id" javaType="java.lang.String" />
    	<result property="inp_nm" column="inp_nm" javaType="java.lang.String" />
    	<result property="inp_key" column="inp_key" javaType="java.lang.String" />
	    <result property="inp_val" column="inp_val" jdbcType="CLOB" javaType="java.lang.String" />
	    <result property="inp_type" column="inp_type" javaType="java.lang.String" />
	    <result property="inp_encode" column="inp_encode" javaType="java.lang.String" />
	    <result property="prm_type" column="prm_type" javaType="java.lang.String" />
	    <result property="prm_dlm" column="prm_dlm" javaType="java.lang.String" />
	    <result property="str_num" column="str_num" javaType="java.lang.String" />
	    <result property="inc_num" column="inc_num" javaType="java.lang.String" />
	    <result property="use_yn" column="use_yn" javaType="java.lang.String" />
	    <result property="disp_ord" column="disp_ord" javaType="int" />
	</resultMap>	
	<!-- <select id="selectDsApiInputList" parameterType="hashmap" resultMap="selectDsApiInputListMap"> -->
	<select id="selectDsApiInputList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , proj_id
     , job_id
     , src_id
     , inp_id
     , inp_nm
     , inp_key
     , inp_val
     , inp_val as inp_eval
     , inp_type
     , inp_encode
     , prm_type
     , prm_dlm
     , str_num
     , inc_num
     , use_yn
     , disp_ord
  from cbap$_api_inp
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
]]>
<if test="INP_ID != null">
   and inp_id = #{INP_ID}
</if>
<if test="USE_YN != null">
   and use_yn = #{USE_YN}
</if>
<![CDATA[
 order by disp_ord
]]> 
    </select> 
    
	<select id="selectDsApiInputRequestList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id, proj_id, job_id, src_id, inp_id, inp_nm
     , inp_key, inp_val, prm_type, prm_dlm, str_num, inc_num, use_yn
  from cbap$_api_inp
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and inp_type = 'REQ'
   and use_yn = 'Y'
 order by disp_ord
]]> 
    </select> 
    
    <select id="selectDsApiOutputList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , proj_id
     , job_id
     , src_id
     , oup_id
     , oup_nm
     , oup_key
     , oup_div
     , oup_type
     , oup_exp
     , oup_desc
     , use_yn
     , disp_ord     
  from cbap$_api_oup
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
]]>
<if test="INP_ID != null">
   and inp_id = #{INP_ID}
</if>
<if test="USE_YN != null">
   and use_yn = #{USE_YN}
</if>
<![CDATA[
 order by disp_ord
]]> 
    </select> 
    
	<update id="insertDsTargetInfo" parameterType="hashmap">
<![CDATA[
insert into cbap$_crw_tgt (
       usr_id
     , proj_id
     , job_id
     , src_id
     , tgt_id
     , tgt_nm
     , tgt_find_type
     , tgt_find_val
     , tgt_rep_val
     , tgt_save_type
     , tgt_save_val
     , disp_ord) 
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , #{SRC_ID} as src_id
     , (select 'T' || lpad(nvl(substr(max(tgt_id),2)+1,1),5,'0') from cbap$_crw_tgt where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}) as tgt_id
     , #{TGT_NM} as tgt_nm
     , #{TGT_FIND_TYPE} as tgt_find_type
     , #{TGT_FIND_VAL} as tgt_find_val
     , #{TGT_REP_VAL} as tgt_rep_val
     , #{TGT_SAVE_TYPE} as tgt_save_type
     , #{TGT_SAVE_VAL} as tgt_save_val
     , #{DISP_ORD} as disp_ord
  from dual
]]>
	</update>  
	
	<update id="insertDsApiInputInfo" parameterType="hashmap">
<![CDATA[
insert into cbap$_api_inp (
       usr_id
     , proj_id
     , job_id
     , src_id
     , inp_id
     , inp_nm
     , inp_key
     , inp_val
     , prm_type
     , prm_dlm
     , str_num
     , inc_num
     , inp_type
     , inp_encode
     , use_yn
     , disp_ord
     , rgst_id
     , rgst_dt
     , updt_id
     , updt_dt) 
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , #{SRC_ID} as src_id
     , (select CASE WHEN #{INP_TYPE} = 'URL' THEN 'I' || lpad(nvl(substr(max(inp_id),2)+1,1),5,'0') 
                    WHEN #{INP_TYPE} = 'REQ' THEN 'IR' || lpad(nvl(substr(max(inp_id),3)+1,1),4,'0')
               ELSE 'I' || lpad(nvl(substr(max(inp_id),2)+1,1),5,'0')
               END AS inp_id 
          from cbap$_api_inp
         where usr_id = #{USR_ID} 
           and proj_id = #{PROJ_ID} 
           and job_id = #{JOB_ID} 
           and src_id = #{SRC_ID} 
           and inp_type = #{INP_TYPE}
       ) as inp_id
     , #{INP_NM} as inp_nm
     , #{INP_KEY} as inp_key
     , #{INP_VAL} as inp_val
     , #{PRM_TYPE} as prm_type
     , #{PRM_DLM} as prm_dlm
     , #{STR_NUM} as str_num
     , #{INC_NUM} as inc_num
     , #{INP_TYPE} as inp_type
     , #{INP_ENCODE} as inp_encode
     , #{USE_YN} as use_yn
     , #{DISP_ORD} as disp_ord
     , #{USR_ID} as rgst_id
     , sysdate as rgst_dt
     , #{USR_ID} as updt_id
     , sysdate as updt_dt
  from dual
]]>
	</update>
	
	<update id="insertDsApiOutputInfo" parameterType="hashmap">
<![CDATA[
insert into cbap$_api_oup (
       usr_id
     , proj_id
     , job_id
     , src_id
     , oup_id
     , oup_nm
     , oup_key
     , oup_div
     , oup_type
     , oup_exp
     , oup_desc
     , use_yn
     , disp_ord
     , rgst_id
     , rgst_dt
     , updt_id
     , updt_dt)
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , #{SRC_ID} as src_id
     , (select 'O' || lpad(nvl(substr(max(oup_id),2)+1,1),5,'0') from cbap$_api_oup where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}) as oup_id
     , #{OUP_NM} as oup_nm
     , #{OUP_KEY} as oup_key
     , #{OUP_DIV} as oup_div
     , #{OUP_TYPE} as oup_type
     , #{OUP_EXP} as oup_exp
     , #{OUP_DESC} as oup_desc
     , #{USE_YN} as use_yn
     , #{DISP_ORD} as disp_ord
     , #{USR_ID} as rgst_id
     , sysdate as rgst_dt
     , #{USR_ID} as updt_id
     , sysdate as updt_dt
  from dual
]]>
	</update>
	    
	<update id="deleteDsTargetInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_crw_tgt where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and tgt_id = #{TGT_ID}
]]>
	</update>    
    
	<update id="deleteDsTargetAllByProject" parameterType="hashmap">
<![CDATA[
delete from cbap$_crw_tgt where usr_id = #{USR_ID} and proj_id = #{PROJ_ID}
]]>
	</update> 
	
	<update id="deleteDsTargetAllByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_crw_tgt where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update> 
	
	<update id="deleteDsTargetAllBySource" parameterType="hashmap">
<![CDATA[
delete from cbap$_crw_tgt where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>
	
	
	<update id="deleteDsApiInputAllByProject" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_inp where usr_id = #{USR_ID} and proj_id = #{PROJ_ID}
]]>
	</update>
	
	<update id="deleteDsApiInputAllByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_inp where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>
	
	<update id="deleteDsApiInputAllBySource" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_inp where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>
	
	<update id="deleteDsApiInputInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_inp where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and inp_id = #{INP_ID}
]]>
	</update>
	
	<update id="deleteDsApiOutputAllByProject" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_oup where usr_id = #{USR_ID} and proj_id = #{PROJ_ID}
]]>
	</update>
	
	<update id="deleteDsApiOutputAllByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_oup where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>
	
	<update id="deleteDsApiOutputAllBySource" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_oup where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>
	
	<update id="deleteDsApiOutputInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_oup where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and oup_id = #{OUP_ID}
]]>
	</update>	
	
	
	
	<update id="deleteDsApiSourceAllByProject" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_src where usr_id = #{USR_ID} and proj_id = #{PROJ_ID}
]]>
	</update>
	
	<update id="deleteDsApiSourceAllByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_src where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>
	
	<update id="deleteDsApiSourceInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_api_src where usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>
	
	<update id="updateDsTargetInfo" parameterType="hashmap">
<![CDATA[
update cbap$_crw_tgt
   set tgt_nm = #{TGT_NM}
     , tgt_find_type = #{TGT_FIND_TYPE}
     , tgt_find_val = #{TGT_FIND_VAL}
     , tgt_rep_val = #{TGT_REP_VAL}
     , tgt_save_type = #{TGT_SAVE_TYPE}
     , tgt_save_val = #{TGT_SAVE_VAL}
     , disp_ord = #{DISP_ORD}
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and tgt_id = #{TGT_ID}
]]>
	</update>
	
	<update id="updateDsApiInputInfo" parameterType="hashmap">
<![CDATA[
update cbap$_api_inp
   set inp_nm = #{INP_NM}
     , inp_key = #{INP_KEY}
     , inp_val = #{INP_VAL}
     , prm_type = #{PRM_TYPE}
     , prm_dlm = #{PRM_DLM}
     , str_num = #{STR_NUM}
     , inc_num = #{INC_NUM}
     , inp_type = #{INP_TYPE}
     , inp_encode = #{INP_ENCODE}
     , use_yn = #{USE_YN}
     , disp_ord = #{DISP_ORD}
     , updt_id = #{USR_ID}
     , updt_dt = sysdate
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and inp_id = #{INP_ID}
]]>
	</update>	

	<update id="updateDsApiOutputInfo" parameterType="hashmap">
<![CDATA[
update cbap$_api_oup
   set oup_nm = #{OUP_NM}
     , oup_key = #{OUP_KEY}
     , oup_div = #{OUP_DIV}
     , oup_type = #{OUP_TYPE}
     , oup_exp = #{OUP_EXP}
     , oup_desc = #{OUP_DESC}
     , use_yn = #{USE_YN}
     , disp_ord = #{DISP_ORD}
     , updt_id = #{USR_ID}
     , updt_dt = sysdate
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and oup_id = #{OUP_ID}
]]>
	</update>
	<resultMap id="selectDsExeItemValResult" type="hashmap" >
	    <result property="item_val" column="item_val" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>
    <!-- <select id="selectDsExeItemVal" resultMap="selectDsExeItemValResult"> -->
    <select id="selectDsExeItemVal" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select exe_num, usr_id, proj_id, job_id, src_id
     , src_num, tgt_id, row_num, item_key
     , item_nm
     , to_char(item_val) as item_val
     , src_position
     , rnk
  from 
     (select exe_num, usr_id, proj_id, job_id, src_id
           , src_num, tgt_id, row_num, item_key
           , item_nm, item_val
           , proj_id || '.' || job_id || '.' || src_id || '.' || src_num || '.' || tgt_id || '.' || row_num || '.' || item_key as src_position
           , row_number() over(order by src_num, row_num) as rnk
        from cbap$_exe_crw_itm
       where exe_num = '${EXE_NUM}'
         and usr_id = #{USR_ID}
         and item_val_position = #{SRC_VAL}
     ) t1
]]>
<if test="ROW_NUM != null and ROW_NUM != '-1'">
 where rnk = #{ROW_NUM}
</if>     
<![CDATA[
 order by rnk
]]> 
    </select>
    
    <select id="selectDsExeItemValForApi" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select exe_num, usr_id, proj_id, job_id, src_id
     , src_num, tgt_id, row_num, item_key
     , item_nm
     , to_char(item_val) as item_val
     , src_position
     , rnk
  from 
     (select exe_num, usr_id, proj_id, job_id, src_id
           , src_num, oup_id as tgt_id, row_num, oup_key as item_key
           , oup_key as item_nm, oup_val as item_val
           , proj_id || '.' || job_id || '.' || src_id || '.' || src_num || '.' || oup_id || '.' || row_num || '.' || oup_key as src_position
           , row_number() over(order by src_num, row_num) as rnk
        from cbap$_exe_api_oup
       where exe_num = '${EXE_NUM}'
         and usr_id = #{USR_ID}
         and oup_val_position = #{SRC_VAL}
     ) t1
]]>
<if test="ROW_NUM != null and ROW_NUM != '-1'">
 where rnk = #{ROW_NUM}
</if>     
<![CDATA[
 order by rnk
]]> 
    </select>
    
    <select id="selectDsExeApiItemVal" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select exe_num, usr_id, proj_id, job_id, src_id
     , src_num, oup_id, row_num, oup_key
     , to_char(oup_val) as oup_val
     , src_position
     , rnk
  from 
     (select exe_num, usr_id, proj_id, job_id, src_id
           , src_num, oup_id, row_num, oup_key
           , oup_val
           , proj_id || '.' || job_id || '.' || src_id || '.' || src_num || '.' || oup_id || '.' || row_num || '.' || oup_key as src_position
           , row_number() over(order by src_num, row_num) as rnk
        from cbap$_exe_api_oup
       where exe_num = '${EXE_NUM}'
         and usr_id = #{USR_ID}
         and oup_val_position = #{SRC_VAL}
     ) t1
]]>
<if test="ROW_NUM != null and ROW_NUM != '-1'">
 where rnk = #{ROW_NUM}
</if>     
<![CDATA[
 order by rnk
]]> 
    </select>    
    
    <select id="selectDsExeUrlVal" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select /*+ ordered */
       t0.src_val
     , t0.src_encode
     , t0.prm1_key, t0.prm1_typ, t0.prm1_val, t0.prm1_inc
     , t0.prm2_key, t0.prm2_typ, t0.prm2_val, t0.prm2_inc
     , t0.prm3_key, t0.prm3_typ, t0.prm3_val, t0.prm3_inc
     , t0.prm4_key, t0.prm4_typ, t0.prm4_val, t0.prm4_inc
     , t0.prm5_key, t0.prm5_typ, t0.prm5_val, t0.prm5_inc
     , nvl2(t1.item_key, t1.proj_id || '.' || t1.job_id || '.' || t1.src_id || '.' || t1.src_num || '.' || t1.tgt_id || '.' || t1.row_num || '.' || t1.item_key,'') as src_position
     , DECODE(t0.src_typ_cd, 'INPUT', t0.src_val,'OTHER',nvl(to_char(t4.oup_val),#{SRC_VAL}) ,nvl(to_char(t1.item_val),#{SRC_VAL})) as url_val
     , nvl(to_char(t2.item_val),#{LOOP_BLOCK_CNT}) as loop_block_cnt_val
     , nvl(to_char(t3.item_val),#{LOOP_CNT}) as loop_cnt_val
  from cbap$_crw_src t0
     , cbap$_exe_crw_itm t1
     , cbap$_exe_crw_itm t2
     , cbap$_exe_crw_itm t3
     , cbap$_exe_api_oup t4
 where t0.usr_id  = #{USR_ID}
   and t0.proj_id = #{PROJ_ID}
   and t0.job_id  = #{JOB_ID}
   and t0.src_id  = #{SRC_ID}
   and t1.exe_num(+) = '${EXE_NUM}'
   and t1.usr_id(+)  = t0.usr_id
   and t1.item_val_position(+) = #{SRC_VAL}
   and t2.exe_num(+) = '${EXE_NUM}'
   and t2.usr_id(+)  = DECODE(#{LOOP_BLOCK_CNT_AUTO},'N',#{USR_ID},t1.usr_id)
   and t2.item_val_position(+) = #{LOOP_BLOCK_CNT}
   and t2.src_num(+) = DECODE(#{LOOP_BLOCK_CNT_AUTO},'N',1,t1.src_num)
   and t2.row_num(+) = DECODE(#{LOOP_BLOCK_CNT_AUTO},'N',1,t1.row_num)
   and t3.exe_num(+) = '${EXE_NUM}'
   and t3.usr_id(+)  = DECODE(#{LOOP_CNT_AUTO},'N',#{USR_ID},t1.usr_id)
   and t3.item_val_position(+) = #{LOOP_CNT}
   and t3.src_num(+) = DECODE(#{LOOP_CNT_AUTO},'N',1,t1.src_num)
   and t3.row_num(+) = DECODE(#{LOOP_CNT_AUTO},'N',1,t1.row_num)
   and t4.exe_num(+) = '${EXE_NUM}'
   and t4.usr_id(+)  = t0.usr_id
   and t4.oup_val_position(+) = #{SRC_VAL}
 order by t1.src_num, t1.row_num
]]> 
    </select>    
    
    <select id="selectDsRegexView" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , regex_id
     , regex_nm
     , regex_val
     , regex_div
  from cbap$_crw_reg
 where usr_id in ('ADM_INIT', #{USR_ID})
   and regex_div = #{REGEX_DIV}
 order by case when usr_id = 'ADM_INIT' then 0 else 1 end, disp_ord
]]> 
    </select>
	
	<select id="selectDsSrcTgtList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select t1.usr_id, t1.proj_id
     , t1.job_id
     , t1.job_id, t1.job_nm 
     , case when t2.job_id is null then 'Waiting'
            when t2.src_cnt > t2.exe_src_cnt then 'Working'
            when t2.src_cnt = t2.exe_src_cnt then 'Completed'
       end as exe_state
     , t2.exe_num
     , t2.src_cnt
     , t2.exe_src_cnt
     , t2.success_tgt_cnt
     , t2.fail_tgt_cnt
     , to_char(t2.str_time,'YYYY/MM/DD HH24:MI:SS') as src_str_time
     , to_char(t2.end_time,'YYYY/MM/DD HH24:MI:SS') as src_end_time
     , t3.tgt_cnt
     , t3.success_itm_cnt
     , t3.fail_itm_cnt
     , to_char(t3.str_time,'YYYY/MM/DD HH24:MI:SS') as tgt_str_time
     , to_char(t3.end_time,'YYYY/MM/DD HH24:MI:SS') as tgt_end_time
  from cbap$_crw_job t1 
     ,
     (select t.exe_num, t.usr_id, t.proj_id, t.job_id
           , count(*) as src_cnt
           , sum(t.success_tgt_cnt) as success_tgt_cnt
           , sum(t.fail_tgt_cnt) as fail_tgt_cnt
           , sum(case when end_time is not null then 1 else 0 end) as exe_src_cnt
           , min(str_time) as str_time
           , max(end_time) as end_time
        from cbap$_exe_crw_src t
       where t.exe_num between '${EXE_FROM_NUM}' and '${EXE_TO_NUM}'
         and t.usr_id = #{USR_ID}
         and t.proj_id = #{PROJ_ID}
]]>  
<if test="JOB_ID_LST != null">
         and t.job_id IN (${JOB_ID_LST})
</if> 
<if test="JOB_ID != null">
         and t.job_id = #{JOB_ID}
</if> 
<if test="SRC_ID != null">
         and t.src_id = #{SRC_ID}
</if>    
<![CDATA[         
       group by t.exe_num, t.usr_id, t.proj_id, t.job_id
     ) t2
     , 
     (select t.exe_num, t.usr_id, t.proj_id, t.job_id
           , count(*) as tgt_cnt
           , sum(decode(t.exe_state,'S02',t.itm_cnt,0)) as success_itm_cnt
           , sum(decode(substr(t.exe_state,1,1),'E',t.itm_cnt,0)) as fail_itm_cnt
           , min(str_time) as str_time
           , max(end_time) as end_time
        from cbap$_exe_crw_tgt t
       where t.exe_num between '${EXE_FROM_NUM}' and '${EXE_TO_NUM}'
         and t.usr_id = #{USR_ID}
         and t.proj_id = #{PROJ_ID}
]]>
<if test="JOB_ID_LST != null">
         and t.job_id IN (${JOB_ID_LST})
</if> 
<if test="JOB_ID != null">
         and t.job_id = #{JOB_ID}
</if>
<![CDATA[         
       group by t.exe_num, t.usr_id, t.proj_id, t.job_id
     ) t3
 where t1.usr_id = #{USR_ID}
   and t1.proj_id = #{PROJ_ID}
]]>   
<if test="JOB_ID_LST != null">
   and t1.job_id IN (${JOB_ID_LST})
</if> 
<if test="JOB_ID != null">
   and t1.job_id = #{JOB_ID}
</if>
<![CDATA[
   and t2.usr_id  = t1.usr_id
   and t2.proj_id = t1.proj_id 
   and t2.job_id  = t1.job_id 
   and t3.exe_num(+) = t2.exe_num
   and t3.usr_id(+)  = t2.usr_id
   and t3.proj_id(+) = t2.proj_id
   and t3.job_id(+)  = t2.job_id
 order by t2.exe_num desc, t2.str_time desc, t1.disp_ord, t1.job_id 
]]> 
    </select>
    
    <!-- CBAP$_EXE_CRW_JOB CUD -->	

	<update id="deleteDsExeJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_job where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>
	
	<update id="insertDsExeJob" parameterType="hashmap">
<![CDATA[
insert into cbap$_exe_crw_job (exe_num, usr_id, proj_id, job_id, exe_state, exe_log, str_time, rgst_id, rgst_dt) values
('${EXE_NUM}',#{USR_ID},#{PROJ_ID},#{JOB_ID},#{EXE_STATE},#{EXE_LOG},SYSTIMESTAMP, #{USR_ID}, SYSDATE)
]]>
	</update>
	
	<update id="updateDsExeJob" parameterType="hashmap">
<![CDATA[
update cbap$_exe_crw_job
   set exe_state = #{EXE_STATE}
     , exe_log = #{EXE_LOG}
     , end_time = SYSTIMESTAMP
 where exe_num = '${EXE_NUM}'
   and usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
]]>
	</update>
	
	<update id="updateDsExeJobStop" parameterType="hashmap">
<![CDATA[
UPDATE cbap$_exe_crw_job T
   SET end_time = SYSTIMESTAMP
     , EXE_STATE = 'S99'
 WHERE t.exe_num = '${EXE_NUM}'
   and t.usr_id = #{USR_ID}
   and t.proj_id = #{PROJ_ID}
]]>   
<if test="JOB_ID != null">
   and t.job_id = #{JOB_ID}
</if>
<if test="JOB_ID_LST != null">
   and t.job_id in (${JOB_ID_LST})
</if>   
   and t.end_time is null
	</update>
	
	
	<!-- CBAP$_EXE_CRW_SRC CUD -->
	
	<update id="deleteDsExeSrcByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_src where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>

	<update id="deleteDsExeSrcBySrc" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_src where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>
	
	<update id="deleteDsExeSrcBySrcNum" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_src where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and src_num = #{SRC_NUM}
]]>
	</update>	
	
	<update id="insertDsExeSrc" parameterType="hashmap">
<![CDATA[
insert into cbap$_exe_crw_src
(exe_num, usr_id, proj_id, job_id, src_id, src_num, src_url, src_position
, pos_proj_id, pos_job_id, pos_src_id, pos_src_num, pos_tgt_id, pos_row_num, pos_item_key, pos_page_no
, exe_state, exe_log, rgst_id, rgst_dt) values
( '${EXE_NUM}', #{USR_ID}, #{PROJ_ID}, #{JOB_ID}, #{SRC_ID}, #{SRC_NUM}, #{SRC_URL}, #{SRC_POSITION}
, regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 1), regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 2), regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 3)
, regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 4), regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 5), regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 6)
, regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 7), regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 8)
, #{EXE_STATE}, #{EXE_LOG}, #{USR_ID}, SYSDATE )
]]>
	</update>
	
	<update id="updateDsExeSrcStart" parameterType="hashmap">
<![CDATA[
update cbap$_exe_crw_src
   set src_content = #{SRC_CONTENT:VARCHAR}
     , exe_state = #{EXE_STATE}
     , exe_log = #{EXE_LOG}
     , str_time = SYSTIMESTAMP
 where exe_num = '${EXE_NUM}'
   and usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and src_num = #{SRC_NUM}
]]>
	</update>
	
	<update id="updateDsExeSrcEnd" parameterType="hashmap">
<![CDATA[
update cbap$_exe_crw_src
   set success_tgt_cnt = #{SUCCESS_TGT_CNT}
     , fail_tgt_cnt = #{FAIL_TGT_CNT}
     , exe_state = #{EXE_STATE}
     , exe_log = #{EXE_LOG}
     , end_time = SYSTIMESTAMP
 where exe_num = '${EXE_NUM}'
   and usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and src_num = #{SRC_NUM}
]]>
	</update>	
	
	
    <update id="updateDsExeSrcStop" parameterType="hashmap">
<![CDATA[
UPDATE cbap$_exe_crw_src T
   SET end_time = SYSTIMESTAMP
     , EXE_STATE = 'S99'
 WHERE t.exe_num = '${EXE_NUM}'
   and t.usr_id = #{USR_ID}
   and t.proj_id = #{PROJ_ID}
]]>   
<if test="JOB_ID != null">
   and t.job_id = #{JOB_ID}
</if>
<if test="JOB_ID_LST != null">
   and t.job_id in (${JOB_ID_LST})
</if>   
<if test="SRC_ID != null">
   and t.src_id = #{SRC_ID}
</if>
<if test="SRC_ID_LST != null">
   and t.src_id in (${SRC_ID_LST})
</if>   
   and t.end_time is null
	</update>	
	
	<!-- CBAP$_EXE_CRW_TGT CUD -->
	
	<update id="deleteDsExeTgtByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_tgt where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>
	
	<update id="deleteDsExeTgtBySrc" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_tgt where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>	

	<update id="deleteDsExeTgtByTgt" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_tgt where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and tgt_id = #{TGT_ID}
]]>
	</update>	
	
	<update id="deleteDsExeTgtBySrcNumTgt" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_tgt where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and src_num = #{SRC_NUM} and tgt_id = #{TGT_ID}
]]>
	</update>	
	
	<update id="insertDsExeTgt" parameterType="hashmap">
<![CDATA[
insert into cbap$_exe_crw_tgt (exe_num, usr_id, proj_id, job_id, src_id, src_num, tgt_id, tgt_save_val
, itm_cnt, exe_state, exe_log, str_time, rgst_id, rgst_dt) values
('${EXE_NUM}',#{USR_ID},#{PROJ_ID},#{JOB_ID},#{SRC_ID},#{SRC_NUM},#{TGT_ID},#{TGT_SAVE_VAL}
,0, #{EXE_STATE},#{EXE_LOG},SYSTIMESTAMP, #{USR_ID}, SYSDATE)
]]>
	</update>
	
	<update id="updateDsExeTgt" parameterType="hashmap">
<![CDATA[
update cbap$_exe_crw_tgt
   set itm_cnt = #{ITM_CNT}
     , exe_state = #{EXE_STATE}
     , exe_log = #{EXE_LOG}
     , end_time = SYSTIMESTAMP
 where exe_num = '${EXE_NUM}'
   and usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and src_num = #{SRC_NUM}
   and tgt_id = #{TGT_ID}
]]>
	</update>
	
	<!-- CBAP$_EXE_CRW_ITM CUD -->

	<update id="deleteDsExeItemByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_itm where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>

	<update id="deleteDsExeItemBySrc" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_itm where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>
	
	<update id="deleteDsExeItemByTgt" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_itm where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and tgt_id = #{TGT_ID}
]]>
	</update>
		
	<update id="deleteDsExeItemBySrcNumTgt" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_crw_itm where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and src_num = #{SRC_NUM} and tgt_id = #{TGT_ID}
]]>
	</update>	
	
	<update id="insertDsExeItem" parameterType="hashmap">
<![CDATA[
insert into cbap$_exe_crw_itm (exe_num, usr_id, proj_id, job_id, src_id, src_num, tgt_id, row_num, item_key, item_nm, item_val, item_val_position
,exe_state, exe_log, exe_time, rgst_id, rgst_dt) values
('${EXE_NUM}',#{USR_ID},#{PROJ_ID},#{JOB_ID},#{SRC_ID},#{SRC_NUM},#{TGT_ID},#{ROW_NUM},#{ITEM_KEY},#{ITEM_NM},#{ITEM_VAL:VARCHAR},#{PROJ_ID}||'.'||#{JOB_ID}||'.'||#{SRC_ID}||'.'||#{TGT_ID}||'.'||#{ITEM_KEY}
,#{EXE_STATE},#{EXE_LOG},SYSTIMESTAMP, #{USR_ID}, SYSDATE)
]]>
	</update>
	
	<select id="selectDsTempJobList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select t1.usr_id, t1.proj_id
     , t1.proj_nm
     , t2.job_id
     , case when t1.usr_id = 'ADM_INIT' then '[공용]' else '' end || t2.job_nm as job_nm
  from cbap$_prj t1
     , cbap$_crw_job t2 
 where (t1.usr_id, t1.proj_id) in
       (select usr_id, proj_id from cbap$_prj where usr_id = 'ADM_INIT' and COLECT_TYP_CD = 'CRW' union all
        select #{USR_ID}, #{PROJ_ID} from dual)
   and t2.usr_id = t1.usr_id
   and t2.proj_id = t1.proj_id
   and (t2.usr_id, t2.proj_id, t2.job_id) not in (select #{USR_ID}, #{PROJ_ID}, #{JOB_ID} from dual)
 order by case when t1.usr_id = 'ADM_INIT' then 0 else 1 end, t2.disp_ord
]]> 
    </select>	
    
	<select id="selectDsTempApiInpValList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select t.row_num
     , t.inp_val 
  from cbap$_api_inp_val t
 where t.usr_id = #{USR_ID}
   and t.proj_id || '.' || t.job_id || '.' || t.src_id || '.' || t.inp_id = #{INP_COND}
   and t.use_yn = 'Y'
 order by t.disp_ord
]]> 
    </select>
        
	<select id="selectDsTempApiJobList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select t1.usr_id, t1.proj_id
     , t1.proj_nm
     , t2.job_id
     , case when t1.usr_id = 'ADM_INIT' then '[공용]' else '' end || t2.job_nm as job_nm
  from cbap$_prj t1
     , cbap$_api_job t2 
 where (t1.usr_id, t1.proj_id) in
       (select usr_id, proj_id from cbap$_prj where usr_id = 'ADM_INIT' and COLECT_TYP_CD = 'API' union all
        select #{USR_ID}, #{PROJ_ID} from dual)
   and t2.usr_id = t1.usr_id
   and t2.proj_id = t1.proj_id
   and (t2.usr_id, t2.proj_id, t2.job_id) not in (select #{USR_ID}, #{PROJ_ID}, #{JOB_ID} from dual)
 order by case when t1.usr_id = 'ADM_INIT' then 0 else 1 end, t2.disp_ord
]]> 
    </select>  
    
	<select id="selectDsTempApiSrcList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select t1.usr_id
     , t1.proj_id
     , t1.job_id
     , t2.src_id
     , t2.src_nm
  from cbap$_api_job t1
     , cbap$_api_src t2 
 where (t1.usr_id, t1.proj_id, t1.job_id) in
       (select #{USR_ID}, #{PROJ_ID}, #{JOB_ID} from dual)
   and t2.usr_id = t1.usr_id
   and t2.proj_id = t1.proj_id
   and t2.job_id = t1.job_id
   and (t2.usr_id, t2.proj_id, t2.job_id, t2.src_id) not in (select #{USR_ID}, #{PROJ_ID}, #{JOB_ID}, #{SRC_ID} from dual)
 order by case when t1.usr_id = 'ADM_INIT' then 0 else 1 end, t2.disp_ord
]]> 
    </select>       
    
	<update id="applyDsTempJobToSrc" parameterType="hashmap">
<![CDATA[
insert into cbap$_crw_src
      (usr_id, proj_id, job_id, src_id, src_nm 
     , src_div_cd
     , src_typ_cd
     , src_encode
     , src_val
     , src_val_position
     , src_save_type
     , delay_time
     , loop_yn, loop_block_cnt, loop_block_cnt_auto, loop_cnt, loop_cnt_auto 
     , prm1_key, prm1_typ, prm1_val, prm1_inc 
     , prm2_key, prm2_typ, prm2_val, prm2_inc 
     , prm3_key, prm3_typ, prm3_val, prm3_inc 
     , prm4_key, prm4_typ, prm4_val, prm4_inc 
     , prm5_key, prm5_typ, prm5_val, prm5_inc 
     , disp_ord, rgst_id, rgst_dt, updt_id, updt_dt )
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , src_id, src_nm, src_div_cd, src_typ_cd, src_encode
     , replace(src_val, #{TEMP_PROJ_ID} || '.' || #{TEMP_JOB_ID}, #{PROJ_ID} || '.' || #{JOB_ID}) as src_val
     , src_val_position
     , src_save_type
     , delay_time
     , loop_yn
     , replace(loop_block_cnt, #{TEMP_PROJ_ID} || '.' || #{TEMP_JOB_ID}, #{PROJ_ID} || '.' || #{JOB_ID}) as loop_block_cnt
     , loop_block_cnt_auto
     , replace(loop_cnt, #{TEMP_PROJ_ID} || '.' || #{TEMP_JOB_ID}, #{PROJ_ID} || '.' || #{JOB_ID}) as loop_cnt
     , loop_cnt_auto
     , prm1_key, prm1_typ, prm1_val, prm1_inc
     , prm2_key, prm2_typ, prm2_val, prm2_inc
     , prm3_key, prm3_typ, prm3_val, prm3_inc
     , prm4_key, prm4_typ, prm4_val, prm4_inc
     , prm5_key, prm5_typ, prm5_val, prm5_inc
     , disp_ord
     , #{USR_ID} as rgst_id
     , SYSDATE as rgst_dt
     , #{USR_ID} as updt_id
     , SYSDATE as updt_dt
  from cbap$_crw_src
 where usr_id = #{TEMP_USR_ID}
   and proj_id = #{TEMP_PROJ_ID}
   and job_id = #{TEMP_JOB_ID}
 order by disp_ord
]]>
	</update>
	
	<update id="applyDsTempApiJobToSrc" parameterType="hashmap">
<![CDATA[
insert into cbap$_api_src
      (usr_id, proj_id, job_id, src_id, src_nm 
     , src_div_cd
     , src_typ_cd
     , src_encode
     , src_val
     , src_val_position
     , method, auth_yn, out_fmt, xml_prefix, xml_namespaceuri, delay_time 
     , disp_ord, rgst_id, rgst_dt, updt_id, updt_dt )
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , src_id, src_nm, src_div_cd, src_typ_cd, src_encode
     , replace(src_val, #{TEMP_PROJ_ID} || '.' || #{TEMP_JOB_ID}, #{PROJ_ID} || '.' || #{JOB_ID}) as src_val
     , src_val_position
     , method, auth_yn, out_fmt, xml_prefix, xml_namespaceuri, delay_time
     , disp_ord
     , #{USR_ID} as rgst_id
     , SYSDATE as rgst_dt
     , #{USR_ID} as updt_id
     , SYSDATE as updt_dt
  from cbap$_api_src
 where usr_id = #{TEMP_USR_ID}
   and proj_id = #{TEMP_PROJ_ID}
   and job_id = #{TEMP_JOB_ID}
 order by disp_ord
]]>
	</update>
		
	<update id="applyDsTempJobToTgt" parameterType="hashmap">
<![CDATA[
insert into cbap$_crw_tgt
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , src_id, tgt_id, tgt_nm, tgt_find_type
     , tgt_find_val, tgt_rep_val, tgt_save_type
     , tgt_save_val, disp_ord
     , #{USR_ID} as rgst_id
     , SYSDATE as rgst_dt
     , #{USR_ID} as updt_id
     , SYSDATE as updt_dt
  from cbap$_crw_tgt
 where usr_id = #{TEMP_USR_ID}
   and proj_id = #{TEMP_PROJ_ID}
   and job_id = #{TEMP_JOB_ID}
 order by src_id, disp_ord
]]>
	</update>
	
	<update id="applyDsTempApiJobToInput" parameterType="hashmap">
<![CDATA[
insert into cbap$_api_inp
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , src_id, inp_id, inp_nm, inp_key
     , case when inp_type = 'REQ' then '' else inp_val end as inp_val
     , prm_type
     , prm_dlm
     , str_num
     , inc_num
     , inp_type
     , inp_encode
     , use_yn
     , disp_ord
     , #{USR_ID} as rgst_id
     , SYSDATE as rgst_dt
     , #{USR_ID} as updt_id
     , SYSDATE as updt_dt     
  from cbap$_api_inp
 where usr_id = #{TEMP_USR_ID}
   and proj_id = #{TEMP_PROJ_ID}
   and job_id = #{TEMP_JOB_ID}
 order by src_id, disp_ord
]]>
	</update>
	
	<update id="applyDsTempApiSourceToInput" parameterType="hashmap">
<![CDATA[
insert into cbap$_api_inp
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , #{SRC_ID} as src_id
     , inp_id, inp_nm, inp_key
     , case when inp_type = 'REQ' then '' else inp_val end as inp_val
     , prm_type
     , prm_dlm
     , str_num
     , inc_num
     , inp_type
     , inp_encode
     , use_yn
     , disp_ord
     , #{USR_ID} as rgst_id
     , SYSDATE as rgst_dt
     , #{USR_ID} as updt_id
     , SYSDATE as updt_dt     
  from cbap$_api_inp
 where usr_id = #{TEMP_USR_ID}
   and proj_id = #{TEMP_PROJ_ID}
   and job_id = #{TEMP_JOB_ID}
   and src_id = #{TEMP_SRC_ID}
 order by src_id, disp_ord
]]>
	</update>	
	
	<update id="applyDsTempApiJobToOutput" parameterType="hashmap">
<![CDATA[
insert into cbap$_api_oup
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , src_id, oup_id, oup_nm, oup_key, oup_div, oup_type, oup_exp, oup_desc, use_yn
     , disp_ord
     , #{USR_ID} as rgst_id
     , SYSDATE as rgst_dt
     , #{USR_ID} as updt_id
     , SYSDATE as updt_dt
  from cbap$_api_oup
 where usr_id = #{TEMP_USR_ID}
   and proj_id = #{TEMP_PROJ_ID}
   and job_id = #{TEMP_JOB_ID}
 order by src_id, disp_ord
]]>
	</update>
	
	<update id="applyDsTempApiSourceToOutput" parameterType="hashmap">
<![CDATA[
insert into cbap$_api_oup
select #{USR_ID} as usr_id
     , #{PROJ_ID} as proj_id
     , #{JOB_ID} as job_id
     , #{SRC_ID} as src_id
     , oup_id, oup_nm, oup_key, oup_div, oup_type, oup_exp, oup_desc, use_yn
     , disp_ord
     , #{USR_ID} as rgst_id
     , SYSDATE as rgst_dt
     , #{USR_ID} as updt_id
     , SYSDATE as updt_dt
  from cbap$_api_oup
 where usr_id = #{TEMP_USR_ID}
   and proj_id = #{TEMP_PROJ_ID}
   and job_id = #{TEMP_JOB_ID}
   and src_id = #{TEMP_SRC_ID}
 order by src_id, disp_ord
]]>
	</update>	
	
	<select id="selectDsReport1" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select t1.usr_id, t1.proj_id
     , t1.job_id, t1.job_nm 
     , t2.exe_num
     , case when t2.str_time is null then 'Waiting'
            when t2.end_time is null then 'Working'
       else 'Completed' 
       end as exe_state
     , to_char(t2.str_time,'YYYY/MM/DD HH24:MI:SS') as job_str_time
     , to_char(t2.end_time,'YYYY/MM/DD HH24:MI:SS') as job_end_time
     , t3.src_cnt
     , t3.exe_src_cnt
     , t3.success_tgt_cnt
     , t3.fail_tgt_cnt
     , t4.tgt_cnt
     , t4.success_itm_cnt
     , t4.fail_itm_cnt
  from cbap$_crw_job t1
     , cbap$_exe_crw_job t2
     ,
     (select t.usr_id, t.proj_id, t.job_id
           , count(*) as src_cnt
           , sum(t.success_tgt_cnt) as success_tgt_cnt
           , sum(t.fail_tgt_cnt) as fail_tgt_cnt
           , sum(case when end_time is not null then 1 else 0 end) as exe_src_cnt
           , min(str_time) as str_time
           , max(end_time) as end_time
        from cbap$_exe_crw_src t
       where 1=1
]]>   
<if test="EXE_NUM != null">
         and t.exe_num = '${EXE_NUM}'
</if>    
<![CDATA[       
         and t.usr_id = #{USR_ID}
         and t.proj_id = #{PROJ_ID}
       group by t.usr_id, t.proj_id, t.job_id
     ) t3
     , 
     (select t.usr_id, t.proj_id, t.job_id
           , count(*) as tgt_cnt
           , sum(decode(t.exe_state,'S02',t.itm_cnt,0)) as success_itm_cnt
           , sum(decode(substr(t.exe_state,1,1),'E',t.itm_cnt,0)) as fail_itm_cnt
           , min(str_time) as str_time
           , max(end_time) as end_time
        from cbap$_exe_crw_tgt t
       where 1=1
]]>   
<if test="EXE_NUM != null">
         and t.exe_num = '${EXE_NUM}'
</if>    
<![CDATA[
         and t.usr_id = #{USR_ID}
         and t.proj_id = #{PROJ_ID}
       group by t.usr_id, t.proj_id, t.job_id
     ) t4
 where t1.usr_id = #{USR_ID}
   and t1.proj_id = #{PROJ_ID}
]]>   
<if test="EXE_NUM != null">
   and t2.exe_num(+) = '${EXE_NUM}'
</if>    
<![CDATA[
   and t2.usr_id(+)  = t1.usr_id
   and t2.proj_id(+) = t1.proj_id 
   and t2.job_id(+)  = t1.job_id 
   and t3.usr_id(+)  = t1.usr_id
   and t3.proj_id(+) = t1.proj_id
   and t3.job_id(+)  = t1.job_id
   and t4.usr_id(+)  = t1.usr_id
   and t4.proj_id(+) = t1.proj_id
   and t4.job_id(+)  = t1.job_id
 order by t1.disp_ord, to_number(t2.exe_num)
]]> 
    </select>

    <!-- CBAP$_EXE_API_JOB CUD -->	

	<update id="deleteDsExeApiJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_api_job where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>
	
	<update id="insertDsExeApiJob" parameterType="hashmap">
<![CDATA[
insert into cbap$_exe_api_job (exe_num, usr_id, proj_id, job_id, exe_state, exe_log, str_time, rgst_id, rgst_dt) values
('${EXE_NUM}',#{USR_ID},#{PROJ_ID},#{JOB_ID},#{EXE_STATE},#{EXE_LOG},SYSTIMESTAMP, #{USR_ID}, SYSDATE)
]]>
	</update>
	
	<update id="updateDsExeApiJob" parameterType="hashmap">
<![CDATA[
update cbap$_exe_api_job
   set exe_state = #{EXE_STATE}
     , exe_log = #{EXE_LOG}
     , end_time = SYSTIMESTAMP
 where exe_num = '${EXE_NUM}'
   and usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
]]>
	</update>
	
	<!-- CBAP$_EXE_API_SRC CUD -->
	
	<update id="deleteDsExeApiSrcByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_api_src where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>

	<update id="deleteDsExeApiSrcBySrc" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_api_src where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>
	
	<update id="deleteDsExeApiSrcBySrcNum" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_api_src where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and src_num = #{SRC_NUM}
]]>
	</update>	
	
	<update id="insertDsExeApiSrc" parameterType="hashmap">
<![CDATA[
insert into cbap$_exe_api_src
(exe_num, usr_id, proj_id, job_id, src_id, src_num, src_url, src_position
, pos_proj_id, pos_job_id, pos_src_id, pos_src_num, pos_oup_id, pos_row_num, pos_oup_key
, exe_state, exe_log, str_time, rgst_id, rgst_dt) values
( '${EXE_NUM}', #{USR_ID}, #{PROJ_ID}, #{JOB_ID}, #{SRC_ID}, #{SRC_NUM}, #{SRC_URL}, #{SRC_POSITION}
, regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 1), regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 2), regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 3)
, regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 4), regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 5), regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 6)
, regexp_substr(#{SRC_POSITION}, '[^.]+', 1, 7)
, #{EXE_STATE}, #{EXE_LOG}, SYSTIMESTAMP, #{USR_ID}, SYSDATE )
]]>
	</update>
	
	<update id="updateDsExeApiSrcStart" parameterType="hashmap">
<![CDATA[
update cbap$_exe_api_src
   set exe_state = #{EXE_STATE}
     , exe_log = #{EXE_LOG}
     , str_time = SYSTIMESTAMP
 where exe_num = '${EXE_NUM}'
   and usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and src_num = #{SRC_NUM}
]]>
	</update>
	
	<update id="updateDsExeApiSrcEnd" parameterType="hashmap">
<![CDATA[
update cbap$_exe_api_src
   set success_oup_cnt = #{SUCCESS_OUP_CNT}
     , fail_oup_cnt = #{FAIL_OUP_CNT}
     , exe_state = #{EXE_STATE}
     , exe_log = #{EXE_LOG}
     , end_time = SYSTIMESTAMP
 where exe_num = '${EXE_NUM}'
   and usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and src_num = #{SRC_NUM}
]]>
	</update>	
	
	<!-- CBAP$_EXE_API_INP CUD -->
	
	<update id="deleteDsExeApiInpByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_api_inp where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>
	
	<update id="deleteDsExeApiInpBySrc" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_api_inp where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>	

	<update id="deleteDsExeApiInpByInp" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_api_inp where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and inp_id = #{INP_ID}
]]>
	</update>	
	
	<update id="deleteDsExeApiInpBySrcNumInp" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_api_inp where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID} and src_num = #{SRC_NUM} and inp_id = #{INP_ID}
]]>
	</update>	
	
	<update id="insertDsExeApiInp" parameterType="hashmap">
<![CDATA[
insert into cbap$_exe_api_inp (exe_num, usr_id, proj_id, job_id, src_id, src_num, inp_id, inp_key, inp_val
, exe_state, exe_log, str_time, rgst_id, rgst_dt) values
('${EXE_NUM}',#{USR_ID},#{PROJ_ID},#{JOB_ID},#{SRC_ID},#{SRC_NUM},#{INP_ID},#{INP_KEY},#{INP_VAL}
,#{EXE_STATE},#{EXE_LOG},SYSTIMESTAMP, #{USR_ID}, SYSDATE)
]]>
	</update>
	
	<update id="updateDsExeApiInp" parameterType="hashmap">
<![CDATA[
update cbap$_exe_api_inp
   set exe_state = #{EXE_STATE}
     , exe_log = #{EXE_LOG}
     , end_time = SYSTIMESTAMP
 where exe_num = '${EXE_NUM}'
   and usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and src_num = #{SRC_NUM}
   and inp_id = #{INP_ID}
]]>
	</update>	

	<!-- CBAP$_EXE_API_OUP CUD -->

	<update id="deleteDsExeApiItemByJob" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_api_oup where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID}
]]>
	</update>

	<update id="deleteDsExeApiItemBySrc" parameterType="hashmap">
<![CDATA[
delete from cbap$_exe_api_oup where exe_num = '${EXE_NUM}' and usr_id = #{USR_ID} and proj_id = #{PROJ_ID} and job_id = #{JOB_ID} and src_id = #{SRC_ID}
]]>
	</update>
	
	<update id="insertDsExeApiItem" parameterType="hashmap">
<![CDATA[
insert into cbap$_exe_api_oup (exe_num, usr_id, proj_id, job_id, src_id, src_num, oup_id, row_num, oup_key, oup_val, oup_val_position
,exe_state, exe_log, exe_time, rgst_id, rgst_dt) values
('${EXE_NUM}',#{USR_ID},#{PROJ_ID},#{JOB_ID},#{SRC_ID},#{SRC_NUM},#{OUP_ID},#{ROW_NUM},#{OUP_KEY},#{OUP_VAL:VARCHAR},#{PROJ_ID}||'.'||#{JOB_ID}||'.'||#{SRC_ID}||'.'||#{OUP_ID}||'.'||#{OUP_KEY}
,#{EXE_STATE},#{EXE_LOG},SYSTIMESTAMP, #{USR_ID}, SYSDATE)
]]>
	</update>
	
	<update id="insertDsExeApiItemFor" parameterType="hashmap">
<![CDATA[
insert all
]]>
<foreach collection="list" item="item" open="" separator="" close=""><![CDATA[
into cbap$_exe_api_oup (exe_num, usr_id, proj_id, job_id, src_id, src_num, oup_id, row_num, oup_key, oup_val, oup_val_position, exe_state, exe_log, exe_time, rgst_id, rgst_dt) values
('${item.EXE_NUM}',#{item.USR_ID},#{item.PROJ_ID},#{item.JOB_ID},#{item.SRC_ID},#{item.SRC_NUM},#{item.OUP_ID},#{item.ROW_NUM},#{item.OUP_KEY},#{item.OUP_VAL:VARCHAR},#{item.PROJ_ID}||'.'||#{item.JOB_ID}||'.'||#{item.SRC_ID}||'.'||#{item.OUP_ID}||'.'||#{item.OUP_KEY},#{item.EXE_STATE},#{item.EXE_LOG},SYSTIMESTAMP, #{item.USR_ID}, SYSDATE)
]]></foreach>
select 1 from dual
	</update>	

	<select id="selectDsExeApiResultList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select t1.usr_id, t1.proj_id
     , t1.job_id
     , t1.src_id, t1.src_nm
     , t2.exe_num 
     , case when t2.src_id is null then 'Waiting'
            when t2.src_cnt > t2.exe_src_cnt then 'Working'
            when t2.src_cnt = t2.exe_src_cnt then 'Completed'
       end as exe_state
     , t2.src_cnt
     , t2.exe_src_cnt
     , t2.success_oup_cnt
     , t2.fail_oup_cnt
     , to_char(t2.str_time,'YYYY/MM/DD HH24:MI:SS') as src_str_time
     , to_char(t2.end_time,'YYYY/MM/DD HH24:MI:SS') as src_end_time
  from cbap$_api_src t1 
     ,
     (select t.exe_num, t.usr_id, t.proj_id, t.job_id, t.src_id
           , count(*) as src_cnt
           , sum(t.success_oup_cnt) as success_oup_cnt
           , sum(t.fail_oup_cnt) as fail_oup_cnt
           , sum(case when end_time is not null then 1 else 0 end) as exe_src_cnt
           , min(str_time) as str_time
           , max(end_time) as end_time
        from cbap$_exe_api_src t
       where t.exe_num between '${EXE_FROM_NUM}' and '${EXE_TO_NUM}' 
         and t.usr_id = #{USR_ID}
         and t.proj_id = #{PROJ_ID}
         and t.job_id = #{JOB_ID}
]]>   
<if test="SRC_ID != null">
         and t.src_id = #{SRC_ID}
</if>
<if test="SRC_ID_LST != null">
         and t.src_id in (${SRC_ID_LST})
</if>
<![CDATA[         
       group by t.exe_num, t.usr_id, t.proj_id, t.job_id, t.src_id
     ) t2
 where t1.usr_id = #{USR_ID}
   and t1.proj_id = #{PROJ_ID}
   and t1.job_id = #{JOB_ID}
]]>   
<if test="SRC_ID != null">
   and t1.src_id = #{SRC_ID}
</if>    
<![CDATA[
   and t2.usr_id  = t1.usr_id
   and t2.proj_id = t1.proj_id 
   and t2.job_id  = t1.job_id 
   and t2.src_id  = t1.src_id 
 order by t2.exe_num desc, t2.str_time desc 
]]> 
    </select>
    
    <select id="selectExeApiExecuteYn" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select exe_state
     , nvl2(end_time,'Y','N') as end_yn
  from cbap$_exe_api_job t
 where t.exe_num = '${EXE_NUM}'
   and t.usr_id = #{USR_ID}
   and t.proj_id = #{PROJ_ID}
   and t.job_id = #{JOB_ID}
]]>   
    </select>

    <select id="selectDsApiInpValList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select t.row_num
     , t.inp_val 
  from cbap$_api_inp_val t
 where t.usr_id = #{USR_ID}
   and t.proj_id || '.' || t.job_id || '.' || t.src_id || '.' || t.inp_id = #{INP_COND}
   and t.use_yn = 'Y'
 order by t.disp_ord
]]>   
    </select>

    
    <update id="updateDsExeApiJobStop" parameterType="hashmap">
<![CDATA[
UPDATE cbap$_exe_api_job T
   SET end_time = SYSTIMESTAMP
     , EXE_STATE = 'S99'
 WHERE t.exe_num = '${EXE_NUM}'
   and t.usr_id = #{USR_ID}
   and t.proj_id = #{PROJ_ID}
]]>   
<if test="JOB_ID != null">
   and t.job_id = #{JOB_ID}
</if>
<if test="JOB_ID_LST != null">
   and t.job_id in (${JOB_ID_LST})
</if>   
   and t.end_time is null
	</update>
	
    <update id="updateDsExeApiSrcStop" parameterType="hashmap">
<![CDATA[
UPDATE cbap$_exe_api_src T
   SET end_time = SYSTIMESTAMP
     , EXE_STATE = 'S99'
 WHERE t.exe_num = '${EXE_NUM}'
   and t.usr_id = #{USR_ID}
   and t.proj_id = #{PROJ_ID}
]]>   
<if test="JOB_ID != null">
   and t.job_id = #{JOB_ID}
</if>
<if test="JOB_ID_LST != null">
   and t.job_id in (${JOB_ID_LST})
</if>   
<if test="SRC_ID != null">
   and t.src_id = #{SRC_ID}
</if>
<if test="SRC_ID_LST != null">
   and t.src_id in (${SRC_ID_LST})
</if>   
   and t.end_time is null
	</update>	

    <select id="selectExeCrwExecuteYn" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select exe_state
     , nvl2(end_time,'Y','N') as end_yn
  from cbap$_exe_crw_job t
 where t.exe_num = '${EXE_NUM}'
   and t.usr_id = #{USR_ID}
   and t.proj_id = #{PROJ_ID}
]]>   
<if test="JOB_ID != null">
   and t.job_id = #{JOB_ID}
</if>
<if test="JOB_ID_LST != null">
   and t.job_id in (${JOB_ID_LST})
</if>
    </select>
    
    
    <!-- 배치예약 관련 소스 -->
    <select id="selectDsBatResultList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select exe_num, usr_id, bat_id, cal_prgm
     , to_char(rsv_dt,'yyyy/mm/dd hh24:mi:ss') as rsv_dt
     , exe_state
     , to_char(str_time,'yyyy/mm/dd hh24:mi:ss') as str_time
     , to_char(end_time,'yyyy/mm/dd hh24:mi:ss') as end_time
  from cbap$_exe_bat_job t
 where t.exe_num between ${EXE_FROM_NUM} || '0001' and ${EXE_TO_NUM} || '9999'
 order by exe_num desc
]]>   
    </select>
     
	<select id="selectDsBatResultList_bak" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select *
  from
     (
select t1.usr_id, t1.proj_id
     , t1.job_id
     , t1.src_id, t1.src_nm
     , t2.exe_num 
     , case when t2.src_id is null then 'Waiting'
            when t2.src_cnt > t2.exe_src_cnt then 'Working'
            when t2.src_cnt = t2.exe_src_cnt then 'Completed'
       end as exe_state
     , t2.src_cnt
     , t2.exe_src_cnt
     , t2.success_oup_cnt
     , t2.fail_oup_cnt
     , to_char(t2.str_time,'YYYY/MM/DD HH24:MI:SS') as src_str_time
     , to_char(t2.end_time,'YYYY/MM/DD HH24:MI:SS') as src_end_time
  from cbap$_api_src t1 
     ,
     (select t.exe_num, t.usr_id, t.proj_id, t.job_id, t.src_id
           , count(*) as src_cnt
           , sum(t.success_oup_cnt) as success_oup_cnt
           , sum(t.fail_oup_cnt) as fail_oup_cnt
           , sum(case when end_time is not null then 1 else 0 end) as exe_src_cnt
           , min(str_time) as str_time
           , max(end_time) as end_time
        from cbap$_exe_api_src t
       where t.exe_num between '${EXE_FROM_NUM}' and '${EXE_TO_NUM}' 
         and t.usr_id = #{USR_ID}
       group by t.exe_num, t.usr_id, t.proj_id, t.job_id, t.src_id
     ) t2
 where t1.usr_id = #{USR_ID}
   and t2.usr_id  = t1.usr_id
   and t2.proj_id = t1.proj_id 
   and t2.job_id  = t1.job_id 
   and t2.src_id  = t1.src_id 
 union all   
select t1.usr_id, t1.proj_id
     , t1.job_id
     , t1.job_id, t1.job_nm 
     , t2.exe_num
     , case when t2.job_id is null then 'Waiting'
            when t2.src_cnt > t2.exe_src_cnt then 'Working'
            when t2.src_cnt = t2.exe_src_cnt then 'Completed'
       end as exe_state
     , t2.src_cnt
     , t2.exe_src_cnt
     , t2.success_tgt_cnt
     , t2.fail_tgt_cnt
     , to_char(t2.str_time,'YYYY/MM/DD HH24:MI:SS') as src_str_time
     , to_char(t2.end_time,'YYYY/MM/DD HH24:MI:SS') as src_end_time
  from cbap$_crw_job t1 
     ,
     (select t.exe_num, t.usr_id, t.proj_id, t.job_id
           , count(*) as src_cnt
           , sum(t.success_tgt_cnt) as success_tgt_cnt
           , sum(t.fail_tgt_cnt) as fail_tgt_cnt
           , sum(case when end_time is not null then 1 else 0 end) as exe_src_cnt
           , min(str_time) as str_time
           , max(end_time) as end_time
        from cbap$_exe_crw_src t
       where t.exe_num between '${EXE_FROM_NUM}' and '${EXE_TO_NUM}'
         and t.usr_id = #{USR_ID}
       group by t.exe_num, t.usr_id, t.proj_id, t.job_id
     ) t2
     , 
     (select t.exe_num, t.usr_id, t.proj_id, t.job_id
           , count(*) as tgt_cnt
           , sum(decode(t.exe_state,'S02',t.itm_cnt,0)) as success_itm_cnt
           , sum(decode(substr(t.exe_state,1,1),'E',t.itm_cnt,0)) as fail_itm_cnt
           , min(str_time) as str_time
           , max(end_time) as end_time
        from cbap$_exe_crw_tgt t
       where t.exe_num between '${EXE_FROM_NUM}' and '${EXE_TO_NUM}'
         and t.usr_id = #{USR_ID}
       group by t.exe_num, t.usr_id, t.proj_id, t.job_id
     ) t3
 where t1.usr_id = #{USR_ID}
   and t2.usr_id  = t1.usr_id
   and t2.proj_id = t1.proj_id 
   and t2.job_id  = t1.job_id 
   and t3.exe_num(+) = t2.exe_num
   and t3.usr_id(+)  = t2.usr_id
   and t3.proj_id(+) = t2.proj_id
   and t3.job_id(+)  = t2.job_id
     ) t
 order by t.exe_num desc, t.src_str_time desc
]]> 
    </select>    
    
    <select id="selectDsBatJobList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , bat_id
     , bat_nm
     , cal_type
     , cal_prgm
     , cal_file_path
     , bat_type
     , (bat_sch_mi || ' ' || bat_sch_hh || ' ' || bat_sch_dd || ' ' ||  bat_sch_mm) as bat_sch
     , bat_sch_mm
     , bat_sch_dd
     , bat_sch_hh
     , bat_sch_mi
     , led_bat_id
     , grp_bat_id
     , use_yn
     , disp_ord
  from cbap$_bat_job t
 where 1=1 
   and usr_id = #{USR_ID}
]]>
<if test="BAT_ID != null">
   and bat_id = #{BAT_ID}
</if>
<![CDATA[  
 order by disp_ord
]]> 
    </select>
    
	<update id="insDsBatJobInfo" parameterType="hashmap">
<![CDATA[
insert into cbap$_bat_job (
       usr_id
     , bat_id
     , bat_nm
     , cal_type
     , cal_prgm
     , cal_file_path
     , bat_type
     , bat_sch_mm
     , bat_sch_dd
     , bat_sch_hh
     , bat_sch_mi
     , led_bat_id
     , grp_bat_id
     , use_yn
     , disp_ord
     , rgst_id, rgst_dt, updt_id, updt_dt) 
select #{USR_ID} as usr_id
     , (select 'B' || lpad(nvl(substr(max(bat_id),2)+1,1),9,'0') from cbap$_bat_job where usr_id = #{USR_ID}) as bat_id
     , #{BAT_NM} as bat_nm
     , #{CAL_TYPE} as cal_type
     , #{CAL_PRGM} as cal_prgm
     , #{CAL_FILE_PATH} as cal_file_path
     , #{BAT_TYPE} as bat_type
     , #{BAT_SCH_MM} as bat_sch_mm
     , #{BAT_SCH_DD} as bat_sch_dd
     , #{BAT_SCH_HH} as bat_sch_hh
     , #{BAT_SCH_MI} as bat_sch_mi
     , #{LED_BAT_ID} as led_bat_id
     , #{GRP_BAT_ID} as grp_bat_id
     , #{USE_YN} as use_yn
     , #{DISP_ORD} as disp_ord
     , #{USR_ID} as rgst_id, sysdate as rgst_dt, #{USR_ID} as updt_id, sysdate as updt_dt  
  from dual
]]>
	</update> 
	
	<update id="delDsBatJobInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_bat_job where usr_id = #{USR_ID} and bat_id = #{BAT_ID}
]]>
	</update> 
    
	<update id="saveDsBatJobInfo" parameterType="hashmap">
<![CDATA[
update cbap$_bat_job
   set bat_nm = #{BAT_NM}
     , cal_type = #{CAL_TYPE}
     , cal_prgm = #{CAL_PRGM}
     , cal_file_path = #{CAL_FILE_PATH}
     , bat_type = #{BAT_TYPE}
     , bat_sch_mm = #{BAT_SCH_MM}
     , bat_sch_dd = #{BAT_SCH_DD}
     , bat_sch_hh = #{BAT_SCH_HH}
     , bat_sch_mi = #{BAT_SCH_MI}
     , led_bat_id = #{LED_BAT_ID}
     , grp_bat_id = #{GRP_BAT_ID}
     , use_yn = #{USE_YN}
     , disp_ord = #{DISP_ORD}
     , updt_id = #{USR_ID} 
     , updt_dt = sysdate
 where usr_id = #{USR_ID}
   and bat_id = #{BAT_ID}
]]>
	</update>
    
    <select id="selectDsBatJobPrmList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
select usr_id
     , bat_id
     , prm_id
     , prm_nm
     , prm_key
     , prm_val
     , prm_fix_yn
     , prm_type
     , use_yn
     , disp_ord
  from cbap$_bat_job_prm
 where usr_id = #{USR_ID}
   and bat_id = #{BAT_ID}
]]>
<if test="PRM_ID != null">
   and prm_id = #{PRM_ID}
</if>
<![CDATA[   
 order by disp_ord
]]> 
    </select>
	
	<update id="insDsBatJobPrmInfo" parameterType="hashmap">
<![CDATA[
insert into cbap$_bat_job_prm (
       usr_id
     , bat_id
     , prm_id
     , prm_nm
     , prm_key
     , prm_val
     , prm_fix_yn
     , prm_type
     , use_yn
     , disp_ord
     , rgst_id, rgst_dt, updt_id, updt_dt
) 
select #{USR_ID} as usr_id
     , #{BAT_ID} as bat_id
     , (select 'BP' || lpad(nvl(substr(max(prm_id),3)+1,1),8,'0') from cbap$_bat_job_prm where usr_id = #{USR_ID} and bat_id = #{BAT_ID}) as prm_id
     , #{PRM_NM} as prm_nm
     , #{PRM_KEY} as prm_key
     , #{PRM_VAL} as prm_val
     , #{PRM_FIX_YN} as prm_fix_yn
     , #{PRM_TYPE} as prm_type
     , #{USE_YN} as use_yn
     , #{DISP_ORD} as disp_ord
     , #{USR_ID} as rgst_id, sysdate as rgst_dt, #{USR_ID} as updt_id, sysdate as updt_dt
  from dual
]]>
	</update>
	
	<update id="delDsBatJobPrmAllByBatJobInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_bat_job_prm where usr_id = #{USR_ID} and bat_id = #{BAT_ID}
]]>
	</update>
	
	<update id="delDsBatJobPrmInfo" parameterType="hashmap">
<![CDATA[
delete from cbap$_bat_job_prm where usr_id = #{USR_ID} and bat_id = #{BAT_ID} and prm_id = #{PRM_ID}
]]>
	</update>
	    
	<update id="saveDsBatJobPrmInfo" parameterType="hashmap">
<![CDATA[
update cbap$_bat_job_prm
   set prm_nm = #{PRM_NM}
     , prm_key = #{PRM_KEY}
     , prm_val = #{PRM_VAL}
     , prm_fix_yn = #{PRM_FIX_YN}
     , prm_type = #{PRM_TYPE}
     , use_yn = #{USE_YN}
     , disp_ord = #{DISP_ORD}
     , updt_id = #{USR_ID} 
     , updt_dt = sysdate
 where usr_id = #{USR_ID}
   and bat_id = #{BAT_ID}
   and prm_id = #{PRM_ID}
]]>
	</update>        
    
	<!-- 아래 소스는 예제임 -->	
	
    
    <select id="selectBoardList" parameterType="hashmap" resultType="hashmap">
<include refid="common.pagingPre"/> 
<![CDATA[
SELECT ROW_NUMBER() OVER (ORDER BY IDX DESC) RNUM,
    IDX,
    TITLE,
    HIT_CNT,
    CREA_DTM
FROM
    TB_BOARD
WHERE
    DEL_GB = 'N'    
ORDER BY IDX DESC
]]>
<include refid="common.pagingPost"/> 
    </select>

	<insert id="insertBoard" parameterType="hashmap">
	    <![CDATA[
INSERT INTO TB_BOARD
(
    IDX,
    TITLE, 
    CONTENTS, 
    HIT_CNT, 
    DEL_GB, 
    CREA_DTM, 
    CREA_ID
)
VALUES
(
    SEQ_TB_BOARD_IDX.NEXTVAL, 
    #{TITLE}, 
    #{CONTENTS}, 
    0, 
    'N', 
    SYSDATE, 
    'Admin'
)
	    ]]>
	</insert>
	
	<update id="updateHitCnt" parameterType="hashmap">
<![CDATA[
    UPDATE TB_BOARD 
    SET
        HIT_CNT = NVL(HIT_CNT, 0) + 1
    WHERE
        IDX = #{IDX}    
]]>
	</update>

	<select id="selectBoardDetail" parameterType="hashmap" resultType="hashmap">
<![CDATA[
    SELECT
        IDX,
        HIT_CNT,
        CREA_ID,
        CREA_DTM,
        TITLE,
        CONTENTS
    FROM
        TB_BOARD
    WHERE
        IDX = #{IDX}        
]]>
	</select>

	<update id="updateBoard" parameterType="hashmap">
<![CDATA[
UPDATE TB_BOARD 
SET
    TITLE = #{TITLE},
    CONTENTS = #{CONTENTS}
WHERE
    IDX = #{IDX}    
]]>
	</update>

	<update id="deleteBoard" parameterType="hashmap">
<![CDATA[
UPDATE TB_BOARD
SET
    DEL_GB = 'Y'
WHERE
    IDX = #{IDX}
]]>
	</update>
	
	<select id="openDrawDatasetAPI" parameterType="hashmap" resultType="hashmap">
	select * from 
	  (select src_num,row_num,oup_key,DBMS_LOB.SUBSTR(oup_val, 1000, 1) oup_val
	   from cbap$_exe_api_oup where usr_id = #{USR_ID}
	        and exe_num = #{EXE_NUM}
         and proj_id = #{PROJ_ID}
         and job_id = #{JOB_ID}
         and src_id = #{SRC_ID}
         and oup_id = #{OUP_ID}
	    )
	pivot( max(oup_val) 
	for oup_key in (
		<foreach collection="OUP_KEYS" item="item" index="index" separator="," open="" close="">
		trim('${item.OUP_KEY}') "${item.OUP_KEY2}"
		</foreach>
		)
	)
	</select>
	<select id="selectOupKeyList" resultType="hashmap" parameterType="hashmap"> 
		
		select	t.oup_key,t.oup_nm,replace(t.oup_key,'.','_') as oup_key2,t.oup_type
		from cbap$_api_oup t,(select distinct oup_key from cbap$_exe_api_oup where usr_id = #{USR_ID}
		and proj_id = #{PROJ_ID}
		and job_id = #{JOB_ID}
		and SRC_ID = #{SRC_ID}
    and exe_num = #{EXE_NUM}
    and oup_id = #{OUP_ID} ) t1
		where t.usr_id = #{USR_ID}
		and t.proj_id = #{PROJ_ID}
		and t.job_id = #{JOB_ID}
		and t.SRC_ID = #{SRC_ID}
    and t.oup_key = t1.oup_key
     order by disp_ord asc
	</select>
	
<!--■■■■■■■■■■■■ 작업일:20170606 작업자:신한별 작업내용: 수집결과 미리보기.st ■■■■■■■■■■■■-->
<select id="selectDScrwPreview" parameterType="hashmap" resultType="hashmap">
	select u1.proj_id,
       u1.job_id,
       u2.src_num,
       u1.row_num,
       u1.subjecttitle,
       u2.src_url,
       u2.src_snp_url_path,
       u2.exe_num
  from (select *
          from (select proj_id,
                       job_id,
                       src_num,
                       row_num,
                       DBMS_LOB.SUBSTR(item_val, 1000, 1) oup_item,
                       item_key
                  from cbap$_exe_crw_itm
                 where usr_id = #{USR_ID}
                   and proj_id =#{PROJ_ID}
                   and job_id = #{JOB_ID}
                   and src_id = 'S00002'
                   and exe_num = #{EXE_NUM}) Pivot(max(oup_item) for item_key in ('num' as num, 'subjectUrl' as subjectUrl, 'subjectTitle' as subjectTitle, 'subjectFrom' as subjectFrom))) u1,
       (select t1.Proj_id,
               t1.src_id,
               t1.src_num,
               t1.row_num,
               t1.oup_item,
               t1.item_key,
               t2.src_url,
               t3.src_snp_url_path,
               t3.exe_num
          from (select usr_id,
                       proj_id,
                       src_id,
                       src_num,
                       row_num,
                       exe_num,
                       item_key,
                       DBMS_LOB.SUBSTR(item_val, 1000, 1) oup_item
                  from cbap$_exe_crw_itm
                 where usr_id = #{USR_ID}
                   and proj_id = #{PROJ_ID}
                   and job_id = #{JOB_ID}
                   and src_id = 'S00003'
                   and exe_num = #{EXE_NUM}) t1,
               (select usr_id, proj_id, src_id, src_num, exe_num, src_url
                  from cbap$_exe_crw_src
                 where usr_id = #{USR_ID}
                   and proj_id = #{PROJ_ID}
                   and job_id = #{JOB_ID}
                   and src_id = 'S00003'
                   and exe_num = #{EXE_NUM}) t2,
                (select * from cbap$_exe_crw_src_snp) t3
         where t1.usr_id = t2.usr_id
           and t1.proj_id = t2.proj_id
           and t1.src_id = t2.src_id
           and t1.src_num = t2.src_num
           and t1.exe_num = t2.exe_num
           and t1.usr_id = t3.usr_id(+)
           and t1.proj_id = t3.proj_id(+)
           and t1.src_id = t3.src_id(+)
           and t1.src_num = t3.src_num(+)
           and t1.exe_num = t3.exe_num(+)) u2
where u1.subjectUrl = u2.src_url
</select>
<select id="selectDScrwImgPreview" parameterType="hashmap" resultType="STRING">
select src_snp_url_path
  from cbap$_exe_crw_src_snp
 where usr_id = #{USR_ID}
   and exe_num = #{EXE_NUM}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and src_id = #{SRC_ID}
   and src_num = #{SRC_NUM}
</select>
<!--■■■■■■■■■■■■ 작업일:20170606 작업자:신한별 작업내용: 수집결과 미리보기.ed ■■■■■■■■■■■■-->

<select id="selectOupId" parameterType="hashmap" resultType="STRING">
SELECT max(oup_id) 
  FROM cbap$_exe_api_oup
 where usr_id = #{USR_ID}
   and proj_id = #{PROJ_ID}
   and job_id = #{JOB_ID}
   and SRC_ID = #{SRC_ID}
   and exe_num = #{EXE_NUM}

</select>

</mapper>